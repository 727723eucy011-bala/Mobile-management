{"ast":null,"code":"// import axios from \"axios\";\n// const API_URL =\"https://8080-debfabbeabddfcfffbdacddbfcdceaaffcc.premiumproject.examly.io/api/plans\";\n// export const addPlan = async (plan) => {\n//  return await axios.post(`${API_URL}/addPlan`, plan);\n// };\n// export const getAllPlans = async () => {\n//  return await axios.get(`${API_URL}/allPlans`);\n// };\n// export const getPlansByType = async (type) => {\n//  return await axios.get(`${API_URL}/byType?type=${type}`);\n// };\n// export const getPlansSortedByPrice = async () => {\n//  return await axios.get(`${API_URL}/sortedByPrice`);\n// };\n// export const deletePlan = async (id) => {\n//  return await axios.delete(`${API_URL}/${id}`);\n// };\nimport axios from\"axios\";const API_URL=\"http://localhost:8080/api/plans\";export const addPlan=plan=>{return axios.post(`${API_URL}/addPlan`,plan);};export const getAllPlans=()=>{return axios.get(`${API_URL}/allPlans`);};export const getPlansByType=type=>{return axios.get(`${API_URL}/byType?type=${type}`);};export const getPlansSortedByPrice=()=>{return axios.get(`${API_URL}/sortedByPrice`);};export const deletePlan=id=>{return axios.delete(`${API_URL}/${id}`);};const API_BASE_URL='http://localhost:8080';const getAuthHeaders=()=>{const token=localStorage.getItem('token');return{'Content-Type':'application/json',...(token&&{Authorization:`Bearer ${token}`})};};export const planAPI={getAllPlans:async()=>{const response=await fetch(`${API_BASE_URL}/plan`);if(!response.ok)throw new Error('Failed to fetch plans');return response.json();},getPlanById:async planId=>{const response=await fetch(`${API_BASE_URL}/plan/${planId}`);if(!response.ok)throw new Error('Failed to fetch plan');return response.json();},addPlan:async plan=>{const response=await fetch(`${API_BASE_URL}/plan`,{method:'POST',headers:getAuthHeaders(),body:JSON.stringify(plan)});if(!response.ok)throw new Error('Failed to add plan');return response.json();},updatePlan:async(planId,plan)=>{const response=await fetch(`${API_BASE_URL}/plan/${planId}`,{method:'PUT',headers:getAuthHeaders(),body:JSON.stringify(plan)});if(!response.ok)throw new Error('Failed to update plan');return response.json();},deletePlan:async planId=>{const response=await fetch(`${API_BASE_URL}/plan/${planId}`,{method:'DELETE',headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to delete plan');}};export const subscriptionAPI={createSubscription:async planId=>{const response=await fetch(`${API_BASE_URL}/subscription`,{method:'POST',headers:getAuthHeaders(),body:JSON.stringify({planId})});if(!response.ok)throw new Error('Failed to create subscription');return response.json();},getUserSubscriptions:async userId=>{const response=await fetch(`${API_BASE_URL}/subscription/user/${userId}`,{headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to fetch subscriptions');return response.json();},cancelSubscription:async subscriptionId=>{const response=await fetch(`${API_BASE_URL}/subscription/${subscriptionId}/cancel`,{method:'PUT',headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to cancel subscription');return response.json();}};export const authAPI={login:async credentials=>{const response=await fetch(`${API_BASE_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});if(!response.ok)throw new Error('Login failed');return response.json();},registerUser:async userData=>{const response=await fetch(`${API_BASE_URL}/auth/register/user`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok)throw new Error('Registration failed');return response.json();},registerAdmin:async userData=>{const response=await fetch(`${API_BASE_URL}/auth/register/admin`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});if(!response.ok)throw new Error('Registration failed');return response.json();}};export const adminAPI={getAllUsers:async()=>{const response=await fetch(`${API_BASE_URL}/admin/users`,{headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to fetch users');return response.json();},getAllSubscriptions:async()=>{const response=await fetch(`${API_BASE_URL}/admin/subscriptions`,{headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to fetch subscriptions');return response.json();},getAllTransactions:async()=>{const response=await fetch(`${API_BASE_URL}/admin/transactions`,{headers:getAuthHeaders()});if(!response.ok)throw new Error('Failed to fetch transactions');return response.json();}};","map":{"version":3,"names":["axios","API_URL","addPlan","plan","post","getAllPlans","get","getPlansByType","type","getPlansSortedByPrice","deletePlan","id","delete","API_BASE_URL","getAuthHeaders","token","localStorage","getItem","Authorization","planAPI","response","fetch","ok","Error","json","getPlanById","planId","method","headers","body","JSON","stringify","updatePlan","subscriptionAPI","createSubscription","getUserSubscriptions","userId","cancelSubscription","subscriptionId","authAPI","login","credentials","registerUser","userData","registerAdmin","adminAPI","getAllUsers","getAllSubscriptions","getAllTransactions"],"sources":["/home/cyborg/Documents/Localhost/reactapp/src/services/api.js"],"sourcesContent":["\n// import axios from \"axios\";\n// const API_URL =\"https://8080-debfabbeabddfcfffbdacddbfcdceaaffcc.premiumproject.examly.io/api/plans\";\n// export const addPlan = async (plan) => {\n//  return await axios.post(`${API_URL}/addPlan`, plan);\n// };\n\n// export const getAllPlans = async () => {\n//  return await axios.get(`${API_URL}/allPlans`);\n// };\n\n// export const getPlansByType = async (type) => {\n//  return await axios.get(`${API_URL}/byType?type=${type}`);\n// };\n\n// export const getPlansSortedByPrice = async () => {\n//  return await axios.get(`${API_URL}/sortedByPrice`);\n// };\n\n// export const deletePlan = async (id) => {\n//  return await axios.delete(`${API_URL}/${id}`);\n// };\n\n\n\nimport axios from \"axios\";\nconst API_URL =\"http://localhost:8080/api/plans\";\nexport const addPlan =  (plan) => {\n return  axios.post(`${API_URL}/addPlan`, plan);\n};\n\nexport const getAllPlans =  () => {\n return  axios.get(`${API_URL}/allPlans`);\n};\n\nexport const getPlansByType =  (type) => {\n return  axios.get(`${API_URL}/byType?type=${type}`);\n};\n\nexport const getPlansSortedByPrice =  () => {\n return  axios.get(`${API_URL}/sortedByPrice`);\n};\n\nexport const deletePlan =  (id) => {\n return  axios.delete(`${API_URL}/${id}`);\n};\n\n\nconst API_BASE_URL = 'http://localhost:8080';\n\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    'Content-Type': 'application/json',\n    ...(token && { Authorization: `Bearer ${token}` }),\n  };\n};\n\nexport const planAPI = {\n  getAllPlans: async () => {\n    const response = await fetch(`${API_BASE_URL}/plan`);\n    if (!response.ok) throw new Error('Failed to fetch plans');\n    return response.json();\n  },\n\n  getPlanById: async (planId) => {\n    const response = await fetch(`${API_BASE_URL}/plan/${planId}`);\n    if (!response.ok) throw new Error('Failed to fetch plan');\n    return response.json();\n  },\n\n  addPlan: async (plan) => {\n    const response = await fetch(`${API_BASE_URL}/plan`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(plan),\n    });\n    if (!response.ok) throw new Error('Failed to add plan');\n    return response.json();\n  },\n\n  updatePlan: async (planId, plan) => {\n    const response = await fetch(`${API_BASE_URL}/plan/${planId}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(plan),\n    });\n    if (!response.ok) throw new Error('Failed to update plan');\n    return response.json();\n  },\n\n  deletePlan: async (planId) => {\n    const response = await fetch(`${API_BASE_URL}/plan/${planId}`, {\n      method: 'DELETE',\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to delete plan');\n  },\n};\n\nexport const subscriptionAPI = {\n  createSubscription: async (planId) => {\n    const response = await fetch(`${API_BASE_URL}/subscription`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify({ planId }),\n    });\n    if (!response.ok) throw new Error('Failed to create subscription');\n    return response.json();\n  },\n\n  getUserSubscriptions: async (userId) => {\n    const response = await fetch(`${API_BASE_URL}/subscription/user/${userId}`, {\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to fetch subscriptions');\n    return response.json();\n  },\n\n  cancelSubscription: async (subscriptionId) => {\n    const response = await fetch(`${API_BASE_URL}/subscription/${subscriptionId}/cancel`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to cancel subscription');\n    return response.json();\n  },\n};\n\nexport const authAPI = {\n  login: async (credentials) => {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(credentials),\n    });\n    if (!response.ok) throw new Error('Login failed');\n    return response.json();\n  },\n\n  registerUser: async (userData) => {\n    const response = await fetch(`${API_BASE_URL}/auth/register/user`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userData),\n    });\n    if (!response.ok) throw new Error('Registration failed');\n    return response.json();\n  },\n\n  registerAdmin: async (userData) => {\n    const response = await fetch(`${API_BASE_URL}/auth/register/admin`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userData),\n    });\n    if (!response.ok) throw new Error('Registration failed');\n    return response.json();\n  },\n};\n\nexport const adminAPI = {\n  getAllUsers: async () => {\n    const response = await fetch(`${API_BASE_URL}/admin/users`, {\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to fetch users');\n    return response.json();\n  },\n\n  getAllSubscriptions: async () => {\n    const response = await fetch(`${API_BASE_URL}/admin/subscriptions`, {\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to fetch subscriptions');\n    return response.json();\n  },\n\n  getAllTransactions: async () => {\n    const response = await fetch(`${API_BASE_URL}/admin/transactions`, {\n      headers: getAuthHeaders(),\n    });\n    if (!response.ok) throw new Error('Failed to fetch transactions');\n    return response.json();\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}