{"ast":null,"code":"const API_BASE_URL='http://localhost:8080';class AuthService{constructor(){this.login=async(email,password)=>{const response=await fetch(`${API_BASE_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(response.ok){const data=await response.json();localStorage.setItem('token',data.token);localStorage.setItem('role',data.role);localStorage.setItem('userId',data.userId);return data;}else{throw new Error('Login failed');}};this.register=async function(email,password){let role=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'USER';const endpoint=role==='ADMIN'?'/auth/register/admin':'/auth/register/user';const response=await fetch(`${API_BASE_URL}${endpoint}`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!response.ok){throw new Error('Registration failed');}return response.text();};this.logout=()=>{localStorage.removeItem('token');localStorage.removeItem('role');localStorage.removeItem('userId');};this.getCurrentUser=()=>{return{token:localStorage.getItem('token'),role:localStorage.getItem('role'),userId:localStorage.getItem('userId')};};this.isAuthenticated=()=>{return!!localStorage.getItem('token');};this.isAdmin=()=>{return localStorage.getItem('role')==='ADMIN';};this.getAuthHeaders=()=>{const token=localStorage.getItem('token');return token?{Authorization:`Bearer ${token}`}:{};};}}export default new AuthService();","map":{"version":3,"names":["API_BASE_URL","AuthService","constructor","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","data","json","localStorage","setItem","token","role","userId","Error","register","arguments","length","undefined","endpoint","text","logout","removeItem","getCurrentUser","getItem","isAuthenticated","isAdmin","getAuthHeaders","Authorization"],"sources":["/home/cyborg/Documents/Localhost/reactapp/src/services/authService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8080';\n\nclass AuthService {\n  login = async (email, password) => {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('role', data.role);\n      localStorage.setItem('userId', data.userId);\n      return data;\n    } else {\n      throw new Error('Login failed');\n    }\n  };\n\n  register = async (email, password, role = 'USER') => {\n    const endpoint = role === 'ADMIN' ? '/auth/register/admin' : '/auth/register/user';\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Registration failed');\n    }\n    return response.text();\n  };\n\n  logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n    localStorage.removeItem('userId');\n  };\n\n  getCurrentUser = () => {\n    return {\n      token: localStorage.getItem('token'),\n      role: localStorage.getItem('role'),\n      userId: localStorage.getItem('userId'),\n    };\n  };\n\n  isAuthenticated = () => {\n    return !!localStorage.getItem('token');\n  };\n\n  isAdmin = () => {\n    return localStorage.getItem('role') === 'ADMIN';\n  };\n\n  getAuthHeaders = () => {\n    const token = localStorage.getItem('token');\n    return token ? { Authorization: `Bearer ${token}` } : {};\n  };\n}\n\nexport default new AuthService();"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAG,uBAAuB,CAE5C,KAAM,CAAAC,WAAY,CAAAC,YAAA,OAChBC,KAAK,CAAG,MAAOC,KAAK,CAAEC,QAAQ,GAAK,CACjC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,YAAY,aAAa,CAAE,CACzDQ,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAIC,QAAQ,CAACO,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,KAAK,CAAC,CACzCF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEH,IAAI,CAACK,IAAI,CAAC,CACvCH,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAEH,IAAI,CAACM,MAAM,CAAC,CAC3C,MAAO,CAAAN,IAAI,CACb,CAAC,IAAM,CACL,KAAM,IAAI,CAAAO,KAAK,CAAC,cAAc,CAAC,CACjC,CACF,CAAC,MAEDC,QAAQ,CAAG,eAAOlB,KAAK,CAAEC,QAAQ,CAAoB,IAAlB,CAAAc,IAAI,CAAAI,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,MAAM,CAC9C,KAAM,CAAAG,QAAQ,CAAGP,IAAI,GAAK,OAAO,CAAG,sBAAsB,CAAG,qBAAqB,CAClF,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGP,YAAY,GAAG0B,QAAQ,EAAE,CAAE,CACzDlB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAQ,KAAK,CAAC,qBAAqB,CAAC,CACxC,CACA,MAAO,CAAAf,QAAQ,CAACqB,IAAI,CAAC,CAAC,CACxB,CAAC,MAEDC,MAAM,CAAG,IAAM,CACbZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC,CAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC,CAC/Bb,YAAY,CAACa,UAAU,CAAC,QAAQ,CAAC,CACnC,CAAC,MAEDC,cAAc,CAAG,IAAM,CACrB,MAAO,CACLZ,KAAK,CAAEF,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC,CACpCZ,IAAI,CAAEH,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC,CAClCX,MAAM,CAAEJ,YAAY,CAACe,OAAO,CAAC,QAAQ,CACvC,CAAC,CACH,CAAC,MAEDC,eAAe,CAAG,IAAM,CACtB,MAAO,CAAC,CAAChB,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC,CACxC,CAAC,MAEDE,OAAO,CAAG,IAAM,CACd,MAAO,CAAAjB,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC,GAAK,OAAO,CACjD,CAAC,MAEDG,cAAc,CAAG,IAAM,CACrB,KAAM,CAAAhB,KAAK,CAAGF,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC,CAC3C,MAAO,CAAAb,KAAK,CAAG,CAAEiB,aAAa,CAAE,UAAUjB,KAAK,EAAG,CAAC,CAAG,CAAC,CAAC,CAC1D,CAAC,EACH,CAEA,cAAe,IAAI,CAAAjB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}